<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:camel="http://camel.apache.org/schema/spring" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:amq="http://activemq.apache.org/schema/core"
	xsi:schemaLocation="http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/beans
		  http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">

	<!-- 使用spring的listenerContainer，消息用持久化保存，服务器重启不会丢失 -->
	<!-- embedded ActiveMQ Broker -->
	<amq:broker useJmx="false" persistent="true">
		<amq:persistenceAdapter>
			<!--<amq:amqPersistenceAdapter directory="d:/amq" /> -->
			<amq:jdbcPersistenceAdapter id="jdbcAdapter" dataSource="#msgDataSource" createTablesOnStartup="true" useDatabaseLock="false"/>
		</amq:persistenceAdapter>
		<amq:transportConnectors>
			<amq:transportConnector uri="vm://localhost:0" />
		</amq:transportConnectors>
	</amq:broker>

	<!-- The mysql Datasource that will be used by the Broker and Hibernate -->
	<bean id="msgDataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3306/msg??relaxAutoCommit=true" />
		<property name="username" value="root" />
		<property name="password" value="123456" />
		<property name="poolPreparedStatements" value="true" />
	</bean>

	<!-- 连接外部的activeMQ ActiveMQ connectionFactory -->
	<amq:connectionFactory id="jmsConnectionFactory"
		brokerURL="tcp://localhost:61616?wireFormat.maxInactivityDuration=0" />

	<!-- ActiveMQ destinations -->
	<!-- 使用topic方式 -->
	<amq:topic name="TOPIC" physicalName="JMS-TEST-TOPIC" />

	<!-- 使用Queue方式 -->
	<amq:queue name="QUEUE" physicalName="JMS-TEST-QUEUE" />

	<!-- Spring JmsTemplate config -->
	<bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
		<property name="connectionFactory">
			<!-- lets wrap in a pool to avoid creating a connection per send -->
			<bean class="org.springframework.jms.connection.SingleConnectionFactory">
				<property name="targetConnectionFactory" ref="jmsConnectionFactory" />
			</bean>
		</property>
		<!-- custom MessageConverter -->
		<property name="messageConverter" ref="defaultMessageConverter" />
	</bean>

	<!-- converter -->
	<bean id="defaultMessageConverter" class="com.trent.techcluster.jms.DefaultMessageConverter" />

	<!-- POJO which send Message uses Spring JmsTemplate -->
	<bean id="topicMessageProducer" class="com.trent.techcluster.jms.TopicMessageProducer">
		<property name="template" ref="jmsTemplate" />
		<property name="destination" ref="TOPIC" />
	</bean>
	<bean id="queueMessageProducer" class="com.trent.techcluster.jms.QueueMessageProducer">
		<property name="template" ref="jmsTemplate" />
		<property name="destination" ref="QUEUE" />
	</bean>

	<!-- Message Driven POJO (MDP) -->
	<!-- consumer1 for topic a -->
	<bean id="topicConsumerA" class="com.trent.techcluster.jms.TopicConsumerA" />

	<!-- consumer for queue -->
	<bean id="queueConsumer" class="com.trent.techcluster.jms.QueueConsumer" />

	<!-- Message Listener for -->
	<bean id="topicListenerA"
		class="org.springframework.jms.listener.adapter.MessageListenerAdapter">
		<constructor-arg ref="topicConsumerA" />
		<!-- may be other method -->
		<property name="defaultListenerMethod" value="receive" />
		<!-- custom MessageConverter define -->
		<property name="messageConverter" ref="defaultMessageConverter" />
	</bean>

	<bean id="queueListener"
		class="org.springframework.jms.listener.adapter.MessageListenerAdapter">
		<constructor-arg ref="queueConsumer" />
		<!-- may be other method -->
		<property name="defaultListenerMethod" value="receive" />
		<!-- custom MessageConverter define -->
		<property name="messageConverter" ref="defaultMessageConverter" />
	</bean>

	<!-- listener container，MDP无需实现接口 -->
	<bean id="topicListenerContainerA"
		class="org.springframework.jms.listener.DefaultMessageListenerContainer">
		<property name="connectionFactory" ref="jmsConnectionFactory" />
		<property name="destination" ref="TOPIC" />
		<property name="messageListener" ref="topicListenerA" />
	</bean>

	<bean id="queueListenerContainer"
		class="org.springframework.jms.listener.DefaultMessageListenerContainer">
		<property name="connectionFactory" ref="jmsConnectionFactory" />
		<property name="destination" ref="QUEUE" />
		<property name="messageListener" ref="queueListener" />
	</bean>
</beans>